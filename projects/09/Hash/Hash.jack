class Hash {
	
	field int size;
	field Array Hash;

	constructor Hash new(int length) {
		let size = length;
		let Hash = Array.new(length);
	    do init();
		return this;
	}

	method void init() {
        var int i;	
    	do Output.printString("Initialization...");
        do Output.println();
    	let i = 0;
    	while ( ~(i = size) ) {
    		let Hash[i] = "";
    		let i = i + 1;
    	}
        do list();
        do Output.println();
    	return;
    }

    method void set(int index, String value) {
        if( index > (size - 1)) {
            do Output.printString("Failure, No such key");
        } else {
            let Hash[index] = value;
            do Output.printString("Successfully");
        }
        do Output.println();
        return;
    }

    method String get(int index) {
        var String result;
        if( index > (size - 1)) {
            let result = "Failure, No such key";
        } else {
            let result = Hash[index];
        }
        return result;
    }

    method void clear(int index) {
        if( index > (size - 1)) {
            do Output.printString("Failure, No such key");
        } else {
            let Hash[index] = "";
            do Output.printString("Successfully");
        }
        do Output.println();
        return;
    }

    method void list() {
    	var int i;
    	let i = 0;
    	do Output.printString("Hash -> [ ");
    	while ( ~(i = size) ) {
    		do Output.printInt(i);
    		do Output.printString("->");
            do Output.printString("[");
    		do Output.printString(Hash[i]);
            do Output.printString("]");
    		let i = i + 1;
    		do Output.printString(" ");
    	}
    	do Output.printString("]");
        do Output.println();
    	return;
    }

    method void dispose() {
        do Hash.dispose();
        do Memory.deAlloc(this);
        return;
    }
}